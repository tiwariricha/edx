{"version":3,"sources":["webpack:///./openedx/features/course_experience/static/course_experience/js/CourseSock.js"],"names":["CourseSock","$toggleActionButton","$","$verificationSock","$upgradeToVerifiedButton","$miniCert","pageLocation","window","location","href","indexOf","fixUpgradeButton","is","documentBottom","scrollTop","height","startFixed","offset","top","endFixed","distRight","outerWidth","left","width","addClass","css","removeClass","length","scroll","resize","on","toggleSpeed","toggleClass","slideToggle","newAriaExpandedState","attr","isOpening","hasClass","logMessage","analytics","track","from_page","Logger","log"],"mappings":";;;;;;;;;;AAAA;;AAEA,IAAaA,UAAb,GAA2B;AACzB,sBAAc;AAAA;;AACZ,MAAMC,sBAAsBC,EAAE,kCAAF,CAA5B;AACA,MAAMC,oBAAoBD,EAAE,6CAAF,CAA1B;AACA,MAAME,2BAA2BF,EAAE,gDAAF,CAAjC;AACA,MAAMG,YAAYH,EAAE,YAAF,CAAlB;AACA,MAAMI,eAAeC,OAAOC,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6B,YAA7B,IAA6C,CAAC,CAA9C,GACf,qBADe,GACS,WAD9B;;AAGA;AACA,MAAMC,mBAAmB,SAAnBA,gBAAmB,GAAM;AAC7B,QAAI,CAACP,yBAAyBQ,EAAzB,CAA4B,UAA5B,CAAL,EAA8C;;AAE9C;AACA,QAAMC,iBAAiBX,EAAEK,MAAF,EAAUO,SAAV,KAAwBZ,EAAEK,MAAF,EAAUQ,MAAV,EAA/C;;AAEA;AACA,QAAMC,aAAab,kBAAkBc,MAAlB,GAA2BC,GAA3B,GAAiC,GAApD;AACA,QAAMC,WAAYH,aAAab,kBAAkBY,MAAlB,EAAd,GAA4C,GAA7D;;AAEA;AACA,QAAMK,YAAYb,OAAOc,UAAP,IAAqBhB,UAAUY,MAAV,GAAmBK,IAAnB,GAA0BjB,UAAUkB,KAAV,EAA/C,CAAlB;;AAEA;AACA,QAAKV,iBAAiBG,UAAjB,IAA+BH,iBAAiBM,QAAhD,IACEjB,EAAEK,MAAF,EAAUgB,KAAV,KAAoB,GAD3B,EACiC;AAC/BnB,+BAAyBoB,QAAzB,CAAkC,UAAlC;AACApB,+BAAyBqB,GAAzB,CAA6B,OAA7B,EAAyCL,SAAzC;AACD,KAJD,MAIO;AACL;AACAhB,+BAAyBsB,WAAzB,CAAqC,UAArC;AACAtB,+BAAyBqB,GAAzB,CAA6B,OAA7B,EAAsC,MAAtC;;AAEA;AACA,UAAIZ,iBAAiBG,UAArB,EAAiC;AAC/BZ,iCAAyBoB,QAAzB,CAAkC,WAAlC;AACApB,iCAAyBsB,WAAzB,CAAqC,cAArC;AACD,OAHD,MAGO,IAAIb,iBAAiBM,QAArB,EAA+B;AACpCf,iCAAyBoB,QAAzB,CAAkC,cAAlC;AACApB,iCAAyBsB,WAAzB,CAAqC,WAArC;AACD;AACF;AACF,GAhCD;;AAkCA;AACA,MAAItB,yBAAyBuB,MAA7B,EAAqC;AACnCzB,MAAEK,MAAF,EAAUqB,MAAV,CAAiBjB,gBAAjB,EAAmCkB,MAAnC,CAA0ClB,gBAA1C;AACD;;AAED;AACAV,sBAAoB6B,EAApB,CAAuB,OAAvB,EAAgC,YAAM;AACpC,QAAMC,cAAc,GAApB;AACA9B,wBAAoB+B,WAApB,CAAgC,QAAhC;AACA7B,sBAAkB8B,WAAlB,CAA8BF,WAA9B,EAA2CpB,gBAA3C;;AAEA;AACA,QAAMuB,uBAAuBjC,oBAAoBkC,IAApB,CAAyB,eAAzB,MAA8C,OAA3E;AACAlC,wBAAoBkC,IAApB,CAAyB,eAAzB,EAA0CD,oBAA1C;;AAEA;AACA,QAAME,YAAYnC,oBAAoBoC,QAApB,CAA6B,QAA7B,CAAlB;AACA,QAAMC,aAAaF,YAAY,kCAAZ,GACb,kCADN;AAEA7B,WAAOgC,SAAP,CAAiBC,KAAjB,CACEF,UADF,EAEE;AACEG,iBAAWnC;AADb,KAFF;AAMD,GAnBD;;AAqBAF,2BAAyB0B,EAAzB,CAA4B,OAA5B,EAAqC,YAAM;AACzCY,WAAOC,GAAP,CACE,uCADF,EAEE;AACEnC,gBAAU;AADZ,KAFF;AAMD,GAPD;AAQD,CA/EH,C","file":"CourseSock.js","sourcesContent":["/* globals Logger */\n\nexport class CourseSock {  // eslint-disable-line import/prefer-default-export\n  constructor() {\n    const $toggleActionButton = $('.action-toggle-verification-sock');\n    const $verificationSock = $('.verification-sock .verification-main-panel');\n    const $upgradeToVerifiedButton = $('.verification-sock .action-upgrade-certificate');\n    const $miniCert = $('.mini-cert');\n    const pageLocation = window.location.href.indexOf('courseware') > -1\n        ? 'Course Content Page' : 'Home Page';\n\n    // Behavior to fix button to bottom of screen on scroll\n    const fixUpgradeButton = () => {\n      if (!$upgradeToVerifiedButton.is(':visible')) return;\n\n      // Grab the current scroll location\n      const documentBottom = $(window).scrollTop() + $(window).height();\n\n      // Establish a sliding window in which the button is fixed\n      const startFixed = $verificationSock.offset().top + 320;\n      const endFixed = (startFixed + $verificationSock.height()) - 220;\n\n      // Ensure update button stays in sock even when max-width is exceeded\n      const distRight = window.outerWidth - ($miniCert.offset().left + $miniCert.width());\n\n      // Update positioning when scrolling is in fixed window and screen width is sufficient\n      if ((documentBottom > startFixed && documentBottom < endFixed\n          && $(window).width() > 960)) {\n        $upgradeToVerifiedButton.addClass('attached');\n        $upgradeToVerifiedButton.css('right', `${distRight}px`);\n      } else {\n        // If outside sliding window, reset to un-attached state\n        $upgradeToVerifiedButton.removeClass('attached');\n        $upgradeToVerifiedButton.css('right', '20px');\n\n        // Add class to define absolute location\n        if (documentBottom < startFixed) {\n          $upgradeToVerifiedButton.addClass('stuck-top');\n          $upgradeToVerifiedButton.removeClass('stuck-bottom');\n        } else if (documentBottom > endFixed) {\n          $upgradeToVerifiedButton.addClass('stuck-bottom');\n          $upgradeToVerifiedButton.removeClass('stuck-top');\n        }\n      }\n    };\n\n    // Fix the sock to the screen on scroll and resize events\n    if ($upgradeToVerifiedButton.length) {\n      $(window).scroll(fixUpgradeButton).resize(fixUpgradeButton);\n    }\n\n    // Open the sock when user clicks to Learn More\n    $toggleActionButton.on('click', () => {\n      const toggleSpeed = 400;\n      $toggleActionButton.toggleClass('active');\n      $verificationSock.slideToggle(toggleSpeed, fixUpgradeButton);\n\n      // Toggle aria-expanded attribute\n      const newAriaExpandedState = $toggleActionButton.attr('aria-expanded') === 'false';\n      $toggleActionButton.attr('aria-expanded', newAriaExpandedState);\n\n      // Log open and close events\n      const isOpening = $toggleActionButton.hasClass('active');\n      const logMessage = isOpening ? 'edx.bi.course.sock.toggle_opened'\n          : 'edx.bi.course.sock.toggle_closed';\n      window.analytics.track(\n        logMessage,\n        {\n          from_page: pageLocation,\n        },\n      );\n    });\n\n    $upgradeToVerifiedButton.on('click', () => {\n      Logger.log(\n        'edx.course.enrollment.upgrade.clicked',\n        {\n          location: 'sock',\n        },\n      );\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./openedx/features/course_experience/static/course_experience/js/CourseSock.js"],"sourceRoot":""}